// Generated by CoffeeScript 1.9.3
var BN;

if (typeof BN === "undefined" || BN === null) {
  BN = {};
}

if (BN.GUI == null) {
  BN.GUI = {};
}

BN.GUI.init = function() {
  BN.GUI.setUpSplitBar();
  return $('#BN-textarea').keydown(BN.GUI.catchTab);
};

BN.GUI.setUpSplitBar = function() {
  $('#BN-splitbar').mousedown(function(e) {
    var originalWidth;
    if (e.which === 1) {
      e.preventDefault();
      originalWidth = parseFloat($('#BN-sidebar').css('width'));
      $('#BN-splitbar').data('originalWidth', originalWidth);
      $('#BN-splitbar').data('isDragged', true);
      return $('#BN-splitbar').data('startX', e.pageX);
    }
  });
  $(document).mouseup(function(e) {
    if (e.which === 1 && $('#BN-splitbar').data('isDragged')) {
      return $('#BN-splitbar').data('isDragged', false);
    }
  });
  return $(document).mousemove(function(e) {
    var delta, newWidth;
    if ($('#BN-splitbar').data('isDragged')) {
      delta = e.pageX - $('#BN-splitbar').data('startX');
      newWidth = $('#BN-splitbar').data('originalWidth') + delta;
      return $('#BN-sidebar').css('width', newWidth + "px");
    }
  });
};

BN.GUI.catchTab = function(e) {
  var end, start, target, value;
  if (e.which === 9) {
    start = this.selectionStart;
    end = this.selectionEnd;
    target = e.target;
    value = target.value;
    target.value = value.substring(0, start) + '\t' + value.substring(end);
    this.selectionStart = this.selectionEnd = start + 1;
    return e.preventDefault();
  }
};
